{"version":3,"sources":["components/Navbar.js","components/TextForms.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_useState","useState","_useState2","Object","slicedToArray","setBtntext","react_default","a","createElement","Fragment","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","hometext","htmlFor","onClick","style","cursor","togglemode","TextForms","text","setText","color","heading","value","onChange","event","target","backgroundColor","fontSize","cursorColor","rows","disabled","length","console","log","text1","toUpperCase","showAlert","toLowerCase","toreplaced","prompt","tobereplaced","RegExp","repval","newtext","replace","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","About","mystyle","_useState3","_useState4","aria-labelledby","data-bs-parent","defaultProps","alert","height","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","cls","body","classList","remove","Alert","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.df9af1ee.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  const [btntext, setBtntext] = useState(\"Dark Mode Disabled\");\r\n\r\n  const togglestyle = () => {\r\n    if (props.mode === \"dark\") {\r\n      setBtntext(\"Dark Mode Disabled\");\r\n    } else if (props.mode === \"light\") {\r\n      setBtntext(\"Dark Mode Enabled\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode}  bg-${props.mode}` }\r\n      >\r\n        <div className=\"container-fluid\" >\r\n          <Link className=\"navbar-brand\" to=\"\\\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\" >\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\" >\r\n                  {props.hometext}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  About us\r\n                </Link>\r\n              </li>\r\n              {/* <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  href=\"#\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </a>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Another action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Something else here\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li> */}\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\">Disabled</a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n          </div>\r\n          <div className=\"form-check form-switch mx-3\">\r\n            {/* <input\r\n              className=\"form-check-input\"\r\n              onClick={props.togglemode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            /> */}\r\n            <label\r\n              className={`form-check-label text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n              onClick={togglestyle}\r\n            >\r\n              {/* {btntext} */}\r\n              Toggle Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\"  style={{cursor:\"pointer\" }}>\r\n          <button className=\"btn btn-primary mx-1 \" type=\"button\" onClick={()=>{props.togglemode('primary')}}>\r\n            blue\r\n          </button>\r\n          <button className=\"btn btn-success mx-1\" type=\"button\" onClick={()=>{props.togglemode('success')}}>\r\n            green\r\n          </button>\r\n          <button className=\"btn btn-danger mx-1\" type=\"button\" onClick={()=>{props.togglemode('danger')}}>\r\n            red\r\n          </button>\r\n          <button className=\"btn btn-warning me-md-2 mx-1\" type=\"button\" onClick={()=>{props.togglemode('warning')}}>\r\n            yellow\r\n          </button>\r\n          <button className=\"btn btn-dark me-md-2 mx-1\" type=\"button\" onClick={()=>{props.togglemode('dark')}}>\r\n            dark\r\n          </button>\r\n          <button className=\"btn btn-light me-md-2 mx-1\" type=\"button\" onClick={()=>{props.togglemode('light')}}>\r\n            light\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  hometext: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  hometext: \"Home text\",\r\n  title: \"Title Is Here\",\r\n};\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForms(props) {\r\n  const handleUpClick = ()=>{\r\n    console.log(\"uppercase was clicked\");\r\n    let text1=text.toUpperCase();\r\n    //setText(\"You Have clicked on handleUpClick\");\r\n    setText(text1);\r\n    props.showAlert(\"Converted To Uppercase\",\"success\");\r\n  }\r\n\r\n  const handleLoClick = ()=>{\r\n    console.log(\"uppercase was clicked\");\r\n    let text1=text.toLowerCase();\r\n    //setText(\"You Have clicked on handleUpClick\");\r\n    setText(text1);\r\n    props.showAlert(\"Converted To Lowercase\",\"success\");\r\n  }\r\n\r\n  const handleOnChange = (event)=>{\r\n    //console.log(\"uppercase was clicked\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const repwor =()=>{\r\n    let toreplaced=prompt(\"Enter The Word To Be Replaced : \");\r\n    let tobereplaced=new RegExp(toreplaced,'g');\r\n    let repval=prompt(\"Enter The replaced word : \");\r\n    let newtext=text.replace(tobereplaced,repval);\r\n    setText(newtext);\r\n    props.showAlert(\"word successfully replaced\",\"success\");\r\n  }\r\n\r\n  const tocleartext = ()=>{\r\n    setText('');\r\n    props.showAlert(\"All text cleared \",\"success\");\r\n  }\r\n\r\n  // const firstcharcap = ()=>{\r\n  //   //let newtext=text.charAt(0).toUpperCase()+text.slice(1);\r\n  //   let newtext=text.split(\" \")\r\n  //   newtext[0].toUpperCase();\r\n  //   setText(newtext);\r\n  // }\r\n\r\n  const [text,setText]=useState('');\r\n  //console.log(useState('Enter Text 2'))\r\n  //text=\"new text\";//wrong way to change the state \r\n  //setText(\"new text\");\r\n\r\n\r\n  const handlecopy = ()=>{\r\n      var text=document.getElementById(\"exampleFormControlTextarea1\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      document.getSelection().removeAllRanges();\r\n      props.showAlert(\"Copied To Clipboard\",\"success\");\r\n  }\r\n\r\n  const handleextraspace = () =>{\r\n    let newtext=text.split(/[ ]+/);\r\n    setText(newtext.join(\" \"))\r\n    props.showAlert(\"extra space removed\",\"success\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color : props.mode==='light'?'black' : 'white'}}>\r\n    <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n            value={text}  \r\n              onChange={handleOnChange}\r\n            id=\"exampleFormControlTextarea1\"\r\n            style={{backgroundColor : props.mode==='light'?'white' : 'dark',color : props.mode==='light'?'black' : 'black',fontSize:'20px',cursorColor : 'white'} }\r\n          rows=\"5\"\r\n        ></textarea>\r\n      </div>\r\n\r\n\r\n      <button disabled={text.length===0} className=\"btn btn-primary my-1\" onClick={handleUpClick}>Convert To Uppercase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-1\" onClick={handleLoClick}>Convert To LowerCase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary my-1\" onClick={repwor}>Replace All Occurences</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-1\" onClick={tocleartext}>clear the console</button>\r\n      {/* <button className=\"btn btn-primary mx\" onClick={firstcharcap}>Capitalise all first character </button> */}\r\n      <button disabled={text.length===0} className=\"btn btn-primary my-1\" onClick={handlecopy}>copy text</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-1\" onClick={handleextraspace}>remove extra space</button>\r\n\r\n\r\n    </div>\r\n     <div className=\"container my-5\" style={{color : props.mode==='light'?'black' : 'white'}}>\r\n        <h1 >Your Text Summary </h1>\r\n        <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words || {text.length} characters || {text.split(\".\").filter((element)=>{return element.length!==0}).length} sentences. || {text.split(\"\\n\").filter((element)=>{return element.length!==0}).length\r\n        } paragraphs ||</p>\r\n        <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes Read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Something In The The Textbox Above To Preview Here\"}</p>\r\n     </div>\r\n     \r\n     \r\n    </>\r\n  );\r\n}\r\n\r\nTextForms.defaultProps = {\r\n  heading: \"This Is My Heading\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const [mystyle, setmystyle] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n  })\r\n\r\n  const [btntext, setBtntext] = useState(\"Enable dark mode\");\r\n\r\n  // const togglestyle = () => {\r\n  //   if (mystyle.color === \"white\") {\r\n  //     setmystyle({\r\n  //       color: \"black\",\r\n  //       backgroundColor: \"white\",\r\n  //     });\r\n  //     setBtntext(\"Enable dark mode\");\r\n  //   } else {\r\n  //     setmystyle({\r\n  //       color: \"white\",\r\n  //       backgroundColor: \"black\",\r\n  //       border:'1px solid white'\r\n  //     });\r\n  //     setBtntext(\"Enable Light Mode\");\r\n  //   }\r\n  // };\r\n  return (\r\n    <div className=\"container my-10\" style={mystyle}>\r\n      <h1>About us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={mystyle}>\r\n        <div className=\"accordion-item\" style={mystyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              style={mystyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Analyze Your Text\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={mystyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              style={mystyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              Free To Use\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={mystyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              style={mystyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              Browser Compatible\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"container\" >\r\n        <button type=\"button\" onClick={togglestyle}  class=\"btn btn-primary\">\r\n          {btntext}\r\n        </button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction alert(props) {\r\n\r\n  const capitalize=(word=>{\r\n    const lower=word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n  })\r\n\r\n  return (\r\n      <div style={{height:'50px'}}>\r\n\r\n\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n         <strong>{capitalize(\"success\")}</strong>: {props.alert.msg}\r\n        {/* <button\r\n          type=\"button\"\r\n          className=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button> */}\r\n        </div>\r\n        } \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default alert;\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForms from './components/TextForms';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport React from \"react\";\nimport { useState } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  // Link,\n  Routes\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode] = useState('light');//whether dark mode is ewnabled or not\n  const [alert,setAlert]=useState(null);\n  \n  const showAlert=(message,type)=>{\n      setAlert({\n        msg: message,\n        type: type,\n      })\n\n      setTimeout(() => {\n        setAlert(null);\n      }, 2000);\n  }\n\n  const removebodyclasses = ()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-primary')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-warning')\n  }\n  const togglemode =(cls)=>{\n    removebodyclasses();\n    // document.body.classList.add('bg-'+cls);\n    /*if(mode==='dark'){\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"light mode has been enabled\",\"primary\");\n    }\n    else if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#2d3063';\n      showAlert(\"dark mode has been enabled\",\"success\");\n\n    }*/\n\n    if(cls==='dark'){\n      document.body.style.backgroundColor='#1c1c1c';\n      setMode('dark');\n      showAlert(\"dark mode has been enabled\",\"dark\");\n    }\n    else if(cls==='light'){\n      document.body.style.backgroundColor='#ffffff';\n      showAlert(\"light mode has been enabled\",\"light\");\n      setMode('light');\n    }\n    else if(cls==='success'){\n      document.body.style.backgroundColor='#03571d';\n      showAlert(\"green mode has been enabled\",\"success\");\n      setMode('success');\n    }\n    else if(cls==='danger'){\n      document.body.style.backgroundColor='#8a0005';\n      showAlert(\"red mode has been enabled\",\"danger\");\n      setMode('danger');\n    }\n    else if(cls==='warning'){\n      document.body.style.backgroundColor='#dbd402';\n      showAlert(\"yellow mode has been enabled\",\"warning\");\n      setMode('warning');\n    }\n    else if(cls==='primary'){\n      document.body.style.backgroundColor='#17077a';\n      showAlert(\"blue mode has been enabled\",\"primary\");\n      setMode('primary');\n    }\n  }\n  return (\n    <>\n    <Router>\n    {/* <Navbar title=\"Textutils\" hometext=\"Home\"/> */}\n    <Navbar  title=\"Text Analyzer\" mode={mode} togglemode={togglemode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Routes>\n          <Route exact path=\"/about\" element={<About />}>\n            {/* <About /> */}\n          </Route>\n          <Route exact path=\"/\"element={<TextForms showAlert={showAlert} heading=\"Enter The Text To Analyze\" mode={mode} />}>\n            {/* <TextForms showAlert={showAlert} heading=\"Enter The Text To Analyze\" mode={mode} /> */}\n          </Route>\n    </Routes>\n    {/*  <About/> */}\n    {/* <TextForms showAlert={showAlert} heading=\"Enter The Text To Analyze\" mode={mode} /> */}\n    </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}